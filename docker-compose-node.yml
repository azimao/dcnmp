version: "3"
services:
  nginx:
    container_name: dcnmp_nginx
    build:
      context: nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        TZ: ${TZ}
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${CODE_PATH}:/app/www/:rw
      - ${CONF_PATH}/nginx/conf/conf.d:/etc/nginx/conf.d:rw
      - ${CONF_PATH}/nginx/conf/vhost:/etc/nginx/vhost:rw
      - ${CONF_PATH}/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${LOG_PATH}/nginx:/var/log/nginx/:rw
    stdin_open: true
    tty: true
    restart: always
    networks:
      - dcnmp

  mongodb:
    container_name: dcnmp_mongodb
    build:
      context: mongodb
      args:
        MONGODB_VERSION: ${MONGODB_VERSION}
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
      TZ: "${TZ}"
    volumes:
      - ${DATA_PATH}/mongodb:/data/db:rw
      - ${DATA_PATH}/mongodb/mongo_key:/mongo:rw
      - ${LOG_PATH}/mongodb:/var/log/mongodb/:rw
    ports:
      - "${MONGODB_HOST_PORT}:27017"
    restart: always
    stdin_open: true
    tty: true
    networks:
      - dcnmp
    command:
      --auth

  nodejs:
    container_name: dcnmp_nodejs
    build:
      context: nodejs
      args:
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        NODEJS_VERSION: ${NODEJS_VERSION}
        TZ: ${TZ}
    ports:
      - "${NODEJS_HOST_PORT_3000}:3000"
      - "${NODEJS_HOST_PORT_8088}:8088"
    volumes:
      - ${CODE_PATH}:/app/www/:rw
    restart: always
    stdin_open: true
    tty: true
    networks:
      - dcnmp

networks:
  dcnmp:
